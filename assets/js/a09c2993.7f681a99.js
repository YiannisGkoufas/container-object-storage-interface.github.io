(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{114:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return f}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),u=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},b=function(e){var t=u(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),b=u(n),d=r,f=b["".concat(c,".").concat(d)]||b[d]||p[d]||a;return n?o.a.createElement(f,i(i({ref:t},l),{},{components:n})):o.a.createElement(f,i({ref:t},l))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var l=2;l<a;l++)c[l]=n[l];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},94:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return u}));var r=n(3),o=n(7),a=(n(0),n(114)),c={title:"Introduction",slug:"/"},i={unversionedId:"introduction",id:"introduction",isDocsHomePage:!1,title:"Introduction",description:"Container Object Storage Interface (COSI)",source:"@site/docs/introduction.md",slug:"/",permalink:"/docs/",editUrl:"https://github.com/container-object-storage-interface/container-object-storage-interface.github.io/docs/introduction.md",version:"current",sidebar:"docs",next:{title:"Contributing",permalink:"/docs/contributing"}},s=[{value:"Container Object Storage Interface (COSI)",id:"container-object-storage-interface-cosi",children:[]},{value:"Why another standard?",id:"why-another-standard",children:[]}],l={toc:s};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"container-object-storage-interface-cosi"},"Container Object Storage Interface (COSI)"),Object(a.b)("p",null,"Container Object Storage Interface (COSI) is a set of abstractions for provisioning and management of object storage. It aims to be a common layer of abstraction across multiple object storage vendors, such that workloads can request and automatically be provisioned object storage buckets."),Object(a.b)("p",null,"The goals of this project are:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Automate object storage provisioning, access and management"),Object(a.b)("li",{parentName:"ul"},"Provide a common layer of abstraction for consuming object storage"),Object(a.b)("li",{parentName:"ul"},"Facilitate lift and shift of workloads across object storage providers (i.e. prevent vendor lock-in)")),Object(a.b)("h2",{id:"why-another-standard"},"Why another standard?"),Object(a.b)("p",null,"Kubernetes abstracts file/block storage via the CSI standard. The primitives for file/block storage do not extend well to object storage. Here is the ",Object(a.b)("strong",{parentName:"p"},Object(a.b)("em",{parentName:"strong"},"extremely"))," concise and incomplete list of reasons why:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Unit of provisioned storage - Bucket instead of filesystem mount or blockdevice."),Object(a.b)("li",{parentName:"ul"},"Access is over the network instead of local POSIX calls."),Object(a.b)("li",{parentName:"ul"},"No common protocol for consumption across various implementations of object storage."),Object(a.b)("li",{parentName:"ul"},"Management policies and primitives - for instance, mounting and unmounting do not apply to object storage.")),Object(a.b)("p",null,"The existing primitives in CSI do not apply to objectstorage. Thus the need for a new standard to automate the management of objectstorage."))}u.isMDXComponent=!0}}]);